<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dcos on dobriak::blog</title>
    <link>https://dobriak.github.io/tags/dcos/</link>
    <description>Recent content in Dcos on dobriak::blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Jan 2018 17:56:03 -0700</lastBuildDate>
    
	<atom:link href="https://dobriak.github.io/tags/dcos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create VPN Tunnel to your DC/OS Cluster</title>
      <link>https://dobriak.github.io/post/vpn-tunnel-to-dcos/</link>
      <pubDate>Thu, 25 Jan 2018 17:56:03 -0700</pubDate>
      
      <guid>https://dobriak.github.io/post/vpn-tunnel-to-dcos/</guid>
      <description>&lt;p&gt;A frequently asked question is how one can connect their client machine to a DC/OS cluster in such a way that the internal cluster network is locally addressable.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Install Kubernetes on DC/OS (beta)</title>
      <link>https://dobriak.github.io/post/kubernetes-dcos-beta/</link>
      <pubDate>Sat, 28 Oct 2017 18:13:41 -0700</pubDate>
      
      <guid>https://dobriak.github.io/post/kubernetes-dcos-beta/</guid>
      <description>&lt;p&gt;My &lt;a href=&#34;https://mesosphere.com/&#34;&gt;employer&lt;/a&gt; recently &lt;a href=&#34;https://mesosphere.com/blog/dcos-1_10-kubernetes/&#34;&gt;announced&lt;/a&gt; first class support for running Kubernetes on top of DC/OS version 1.10. In this post we will examine how to get started with using Kubernetes on DC/OS.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DC/OS on KVM CoreOS VMs</title>
      <link>https://dobriak.github.io/post/kvm-coreos-dcos/</link>
      <pubDate>Sat, 28 Oct 2017 13:29:29 -0700</pubDate>
      
      <guid>https://dobriak.github.io/post/kvm-coreos-dcos/</guid>
      <description>&lt;p&gt;In this article we will automate the DC/OS installation procedure specifically for CoreOS VMs running on KVM (libvirt).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Started with Apache Cassandra On DC/OS</title>
      <link>https://dobriak.github.io/post/apache-cassandra-on-dcos/</link>
      <pubDate>Fri, 28 Jul 2017 08:09:49 -0700</pubDate>
      
      <guid>https://dobriak.github.io/post/apache-cassandra-on-dcos/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://cassandra.apache.org/&#34;&gt;Apache Cassandra&lt;/a&gt; is a distributed, structured storage system. Cassandra clusters are highly available, scalable, performant, and fault tolerant. DC/OS allows you to quickly configure, install, and manage Apache Cassandra clusters, so you can offer Cassandra as a managed service to your organization.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IP per Container with Calico CNI on DC/OS</title>
      <link>https://dobriak.github.io/post/using-calico-on-dcos/</link>
      <pubDate>Tue, 18 Jul 2017 22:00:33 -0700</pubDate>
      
      <guid>https://dobriak.github.io/post/using-calico-on-dcos/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.projectcalico.org//&#34;&gt;Project Calico&lt;/a&gt; is a Layer 3 software defined network that runs well on &lt;a href=&#34;http://docs.projectcalico.org/v2.3/getting-started/mesos/&#34;&gt;DC/OS and Mesos&lt;/a&gt;. In this blog post we will walk through installing and configuring it on DC/OS 1.9. That will allow us to attach containers to Calico and receive unique IPs for them. We will also examine the security implications and policies that can be applied.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Compiling Local DC/OS Universe</title>
      <link>https://dobriak.github.io/post/compiling-local-universe/</link>
      <pubDate>Sat, 27 May 2017 00:51:14 -0700</pubDate>
      
      <guid>https://dobriak.github.io/post/compiling-local-universe/</guid>
      <description>&lt;p&gt;DC/OS offers its users the ability to install various frameworks with a single click from a central publicly hosted package repository called Universe.&lt;/p&gt;

&lt;p&gt;Many Mesosphere clients run their DC/OS clusters in air-gapped environments with no access to the internet, thus not allowing for said one click installation of framework packages.&lt;/p&gt;

&lt;p&gt;You can easily solve this problem if your DC/OS cluster is running in such a restricted environment.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Automating advanced DC/OS installation.</title>
      <link>https://dobriak.github.io/post/automated-advanced-dcos-installation/</link>
      <pubDate>Thu, 27 Apr 2017 20:23:50 -0700</pubDate>
      
      <guid>https://dobriak.github.io/post/automated-advanced-dcos-installation/</guid>
      <description>&lt;p&gt;In this article we will look at automating the advanced DC/OS installation procedure. We will break down the requirements and look for opportunities to speed up the lengthy installation.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Jenkins with a private Docker registry on DC/OS</title>
      <link>https://dobriak.github.io/post/jenkins-marathonlb-dcos/</link>
      <pubDate>Tue, 25 Apr 2017 22:05:07 -0700</pubDate>
      
      <guid>https://dobriak.github.io/post/jenkins-marathonlb-dcos/</guid>
      <description>&lt;p&gt;In this guide I will walk you through setting up your Jenkins instance to use the private docker registry we set up in the previous blog post.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Secure private Docker registry on DC/OS</title>
      <link>https://dobriak.github.io/post/docker-registry-marathonlb-dcos/</link>
      <pubDate>Mon, 24 Apr 2017 16:45:12 -0700</pubDate>
      
      <guid>https://dobriak.github.io/post/docker-registry-marathonlb-dcos/</guid>
      <description>&lt;p&gt;This is a short guide on how to set up a private docker registry behind an internal marathon-lb instance all running on DC/OS. Since marathon-lb is a Layer 7 load balancer we will use it to terminate SSL for our private registry and avoid using it in insecure mode. We will use self-signed TLS certificates for that purpose.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>